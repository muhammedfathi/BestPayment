// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NaqdiDAL.Models;

namespace NaqdiDAL.Migrations
{
    [DbContext(typeof(NakqdiAppContext))]
    [Migration("20210405095734_FirstSP")]
    partial class FirstSP
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NaqdiDAL.Models.AgentCommissions", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Case_ID")
                        .HasColumnType("int");

                    b.Property<bool?>("Commission_Type")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Commission_Value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Company_ID")
                        .HasColumnType("int");

                    b.Property<bool?>("Fees_Type")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Fees_Value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("PaymentState")
                        .HasColumnType("bit");

                    b.Property<int?>("Provider_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Service_ID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Case_ID");

                    b.HasIndex("Company_ID");

                    b.HasIndex("Provider_ID");

                    b.HasIndex("Service_ID");

                    b.HasIndex("UserID");

                    b.ToTable("AgentCommissions");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Banks", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bank_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FeesPercent")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("NaqdiDAL.Models.CasesCPS", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cases_id")
                        .HasColumnType("int");

                    b.Property<int>("Comapny_id")
                        .HasColumnType("int");

                    b.Property<bool?>("CommissionType")
                        .HasColumnType("bit");

                    b.Property<decimal?>("CommissionValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("FeesType")
                        .HasColumnType("bit");

                    b.Property<decimal?>("FeesValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("ISEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("PaymentState")
                        .HasColumnType("bit");

                    b.Property<int>("Provider_id")
                        .HasColumnType("int");

                    b.Property<bool>("QueryState")
                        .HasColumnType("bit");

                    b.Property<int>("Service_id")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Cases_id");

                    b.HasIndex("Comapny_id");

                    b.HasIndex("Provider_id");

                    b.HasIndex("Service_id");

                    b.ToTable("CasesCPS");
                });

            modelBuilder.Entity("NaqdiDAL.Models.CasesCPSField_Prov", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CasesCPS_ID")
                        .HasColumnType("int");

                    b.Property<string>("fieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fieldValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CasesCPS_ID");

                    b.ToTable("CasesCPSField_Provs");
                });

            modelBuilder.Entity("NaqdiDAL.Models.ChargeOperation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OperatioDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("OperatioTime")
                        .HasColumnType("time");

                    b.Property<int>("OperationID")
                        .HasColumnType("int");

                    b.Property<bool>("OperationState")
                        .HasColumnType("bit");

                    b.Property<int?>("Phone")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.Property<string>("responseMSG")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("OperationID");

                    b.HasIndex("UserID");

                    b.ToTable("ChargeOperations");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Complaint", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComplaintUserOwnerIDFK")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cdate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ComplaintUserOwnerIDFK");

                    b.ToTable("Complaint");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Excute", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Commission")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DateOut")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DiscValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Fees")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FinalUser")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeOut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("company_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateIn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("provider_id")
                        .HasColumnType("int");

                    b.Property<int>("service_id")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<decimal>("value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("FinalUser");

                    b.HasIndex("company_id");

                    b.HasIndex("provider_id");

                    b.HasIndex("service_id");

                    b.HasIndex("user_id");

                    b.ToTable("Excute");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Execution_Response", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExecutionID")
                        .HasColumnType("int");

                    b.Property<string>("fieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fieldValue")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ExecutionID");

                    b.ToTable("Execution_Responses");
                });

            modelBuilder.Entity("NaqdiDAL.Models.GlobalConfigration", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("StorConfig")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("GlobalConfigration");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Log", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("accountno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("companyid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ldate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("providerid")
                        .HasColumnType("int");

                    b.Property<string>("request")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("serviceid")
                        .HasColumnType("int");

                    b.Property<int?>("userid")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("companyid");

                    b.HasIndex("providerid");

                    b.HasIndex("serviceid");

                    b.HasIndex("userid");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Login_Information", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("action_date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("action_time")
                        .HasColumnType("time");

                    b.Property<double?>("latitude")
                        .HasColumnType("float");

                    b.Property<double?>("longitude")
                        .HasColumnType("float");

                    b.Property<string>("mac_address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("user_id");

                    b.ToTable("Login_Information");
                });

            modelBuilder.Entity("NaqdiDAL.Models.PayMent_Cards", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Cards_Count")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Pay_Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Residual_Value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("bill_value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("paid_value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("phoneno")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("PayMent_Cards");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Provider", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Center_id")
                        .HasColumnType("int");

                    b.Property<string>("Servisversion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Provider");
                });

            modelBuilder.Entity("NaqdiDAL.Models.ProvidersDeposit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BankID")
                        .HasColumnType("int");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProviderID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("BankID");

                    b.HasIndex("ProviderID");

                    b.HasIndex("UserID");

                    b.ToTable("ProvidersDeposit");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Reply", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompliaintID")
                        .HasColumnType("int");

                    b.Property<string>("Reply1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReplyedByIDFK")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReplyedON")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("CompliaintID");

                    b.HasIndex("ReplyedByIDFK");

                    b.ToTable("Reply");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Rol_PrivFT", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Priv_id")
                        .HasColumnType("int");

                    b.Property<int>("Rol_id")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.Property<bool?>("state")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("Priv_id");

                    b.HasIndex("Rol_id");

                    b.HasIndex("UserID");

                    b.ToTable("Rol_PrivFT");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            name = "مالك"
                        },
                        new
                        {
                            ID = 2,
                            name = "وكيل"
                        },
                        new
                        {
                            ID = 3,
                            name = "مركز"
                        },
                        new
                        {
                            ID = 4,
                            name = "موظف"
                        });
                });

            modelBuilder.Entity("NaqdiDAL.Models.Service", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("MType")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_en")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Store", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CardValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CaseCPS_ID")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("PinNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProviderID")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceID")
                        .HasColumnType("int");

                    b.Property<string>("card_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("duration")
                        .HasColumnType("int");

                    b.Property<string>("serial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("startDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CaseCPS_ID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("ProviderID");

                    b.HasIndex("ServiceID");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("NaqdiDAL.Models.TUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CardID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role_ID")
                        .HasColumnType("int");

                    b.Property<bool?>("State")
                        .HasColumnType("bit");

                    b.Property<int?>("UPUser")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("Role_ID");

                    b.HasIndex("UPUser");

                    b.ToTable("TUser");
                });

            modelBuilder.Entity("NaqdiDAL.Models.UsersDeposit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BankID")
                        .HasColumnType("int");

                    b.Property<int?>("BanksID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FeesType")
                        .HasColumnType("bit");

                    b.Property<decimal?>("FeesValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte[]>("Image_Bytes")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("MoveType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NetValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ResposibleID")
                        .HasColumnType("int");

                    b.Property<int>("ToUser")
                        .HasColumnType("int");

                    b.Property<bool>("Type")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("image_Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("BanksID");

                    b.HasIndex("ResposibleID");

                    b.HasIndex("ToUser");

                    b.HasIndex("UserId");

                    b.ToTable("UsersDeposit");
                });

            modelBuilder.Entity("NaqdiDAL.Models.cases", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("EndValue")
                        .HasColumnType("float");

                    b.Property<double>("StartValue")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("cases");
                });

            modelBuilder.Entity("NaqdiDAL.Models.privilage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("company_id")
                        .HasColumnType("int");

                    b.Property<int?>("service_id")
                        .HasColumnType("int");

                    b.Property<int?>("upServiceId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("company_id");

                    b.HasIndex("service_id");

                    b.ToTable("privilage");
                });

            modelBuilder.Entity("NaqdiDAL.Models.AgentCommissions", b =>
                {
                    b.HasOne("NaqdiDAL.Models.cases", "cases")
                        .WithMany()
                        .HasForeignKey("Case_ID");

                    b.HasOne("NaqdiDAL.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("Company_ID");

                    b.HasOne("NaqdiDAL.Models.Provider", "Provider")
                        .WithMany()
                        .HasForeignKey("Provider_ID");

                    b.HasOne("NaqdiDAL.Models.Service", "Service")
                        .WithMany()
                        .HasForeignKey("Service_ID");

                    b.HasOne("NaqdiDAL.Models.TUser", "user")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cases");

                    b.Navigation("Company");

                    b.Navigation("Provider");

                    b.Navigation("Service");

                    b.Navigation("user");
                });

            modelBuilder.Entity("NaqdiDAL.Models.CasesCPS", b =>
                {
                    b.HasOne("NaqdiDAL.Models.cases", "cases")
                        .WithMany("CasesCPS")
                        .HasForeignKey("Cases_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NaqdiDAL.Models.Company", "Company")
                        .WithMany("CasesCPS")
                        .HasForeignKey("Comapny_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NaqdiDAL.Models.Provider", "Provider")
                        .WithMany("CasesCPS")
                        .HasForeignKey("Provider_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NaqdiDAL.Models.Service", "Service")
                        .WithMany("CasesCPS")
                        .HasForeignKey("Service_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cases");

                    b.Navigation("Company");

                    b.Navigation("Provider");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("NaqdiDAL.Models.CasesCPSField_Prov", b =>
                {
                    b.HasOne("NaqdiDAL.Models.CasesCPS", "CasesCPS")
                        .WithMany("CasesCPSField_Provs")
                        .HasForeignKey("CasesCPS_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CasesCPS");
                });

            modelBuilder.Entity("NaqdiDAL.Models.ChargeOperation", b =>
                {
                    b.HasOne("NaqdiDAL.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NaqdiDAL.Models.Excute", "Excute")
                        .WithMany()
                        .HasForeignKey("OperationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NaqdiDAL.Models.TUser", "user")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Excute");

                    b.Navigation("user");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Complaint", b =>
                {
                    b.HasOne("NaqdiDAL.Models.TUser", "TUser")
                        .WithMany("Complaint")
                        .HasForeignKey("ComplaintUserOwnerIDFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TUser");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Excute", b =>
                {
                    b.HasOne("NaqdiDAL.Models.TUser", "TUser1")
                        .WithMany("Excute1")
                        .HasForeignKey("FinalUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NaqdiDAL.Models.Company", "Company")
                        .WithMany("Excute")
                        .HasForeignKey("company_id");

                    b.HasOne("NaqdiDAL.Models.Provider", "Provider")
                        .WithMany("Excute")
                        .HasForeignKey("provider_id");

                    b.HasOne("NaqdiDAL.Models.Service", "Service")
                        .WithMany("Excute")
                        .HasForeignKey("service_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NaqdiDAL.Models.TUser", "TUser")
                        .WithMany("Excute")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Provider");

                    b.Navigation("Service");

                    b.Navigation("TUser");

                    b.Navigation("TUser1");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Execution_Response", b =>
                {
                    b.HasOne("NaqdiDAL.Models.Excute", "Excute")
                        .WithMany()
                        .HasForeignKey("ExecutionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Excute");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Log", b =>
                {
                    b.HasOne("NaqdiDAL.Models.Company", "Company")
                        .WithMany("Log")
                        .HasForeignKey("companyid");

                    b.HasOne("NaqdiDAL.Models.Provider", "Provider")
                        .WithMany("Log")
                        .HasForeignKey("providerid");

                    b.HasOne("NaqdiDAL.Models.Service", "Service")
                        .WithMany("Log")
                        .HasForeignKey("serviceid");

                    b.HasOne("NaqdiDAL.Models.TUser", "TUser")
                        .WithMany("Log")
                        .HasForeignKey("userid");

                    b.Navigation("Company");

                    b.Navigation("Provider");

                    b.Navigation("Service");

                    b.Navigation("TUser");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Login_Information", b =>
                {
                    b.HasOne("NaqdiDAL.Models.TUser", "User")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NaqdiDAL.Models.ProvidersDeposit", b =>
                {
                    b.HasOne("NaqdiDAL.Models.Banks", "Banks")
                        .WithMany("ProvidersDeposit")
                        .HasForeignKey("BankID");

                    b.HasOne("NaqdiDAL.Models.Provider", "Provider")
                        .WithMany("ProvidersDeposit")
                        .HasForeignKey("ProviderID");

                    b.HasOne("NaqdiDAL.Models.TUser", "TUser")
                        .WithMany("ProvidersDeposit")
                        .HasForeignKey("UserID");

                    b.Navigation("Banks");

                    b.Navigation("Provider");

                    b.Navigation("TUser");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Reply", b =>
                {
                    b.HasOne("NaqdiDAL.Models.Complaint", "Complaint")
                        .WithMany("Reply")
                        .HasForeignKey("CompliaintID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NaqdiDAL.Models.TUser", "TUser")
                        .WithMany("Reply")
                        .HasForeignKey("ReplyedByIDFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Complaint");

                    b.Navigation("TUser");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Rol_PrivFT", b =>
                {
                    b.HasOne("NaqdiDAL.Models.privilage", "privilage")
                        .WithMany("Rol_PrivFT")
                        .HasForeignKey("Priv_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NaqdiDAL.Models.Role", "Role")
                        .WithMany("Rol_PrivFT")
                        .HasForeignKey("Rol_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NaqdiDAL.Models.TUser", "TUser")
                        .WithMany("Rol_PrivFT")
                        .HasForeignKey("UserID");

                    b.Navigation("privilage");

                    b.Navigation("Role");

                    b.Navigation("TUser");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Store", b =>
                {
                    b.HasOne("NaqdiDAL.Models.CasesCPS", "CasesCPS")
                        .WithMany("Stores")
                        .HasForeignKey("CaseCPS_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NaqdiDAL.Models.Company", null)
                        .WithMany("Store")
                        .HasForeignKey("CompanyID");

                    b.HasOne("NaqdiDAL.Models.Provider", null)
                        .WithMany("Store")
                        .HasForeignKey("ProviderID");

                    b.HasOne("NaqdiDAL.Models.Service", null)
                        .WithMany("Store")
                        .HasForeignKey("ServiceID");

                    b.Navigation("CasesCPS");
                });

            modelBuilder.Entity("NaqdiDAL.Models.TUser", b =>
                {
                    b.HasOne("NaqdiDAL.Models.Role", "Role")
                        .WithMany("TUser")
                        .HasForeignKey("Role_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NaqdiDAL.Models.TUser", "User")
                        .WithMany()
                        .HasForeignKey("UPUser");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NaqdiDAL.Models.UsersDeposit", b =>
                {
                    b.HasOne("NaqdiDAL.Models.Banks", "Banks")
                        .WithMany("UsersDeposit")
                        .HasForeignKey("BanksID");

                    b.HasOne("NaqdiDAL.Models.TUser", "User1")
                        .WithMany("UsersDeposit1")
                        .HasForeignKey("ResposibleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NaqdiDAL.Models.TUser", "User2")
                        .WithMany("UsersDeposit2")
                        .HasForeignKey("ToUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NaqdiDAL.Models.TUser", "User")
                        .WithMany("UsersDeposit")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Banks");

                    b.Navigation("User");

                    b.Navigation("User1");

                    b.Navigation("User2");
                });

            modelBuilder.Entity("NaqdiDAL.Models.privilage", b =>
                {
                    b.HasOne("NaqdiDAL.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("NaqdiDAL.Models.Service", "Service")
                        .WithMany()
                        .HasForeignKey("service_id");

                    b.Navigation("Company");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Banks", b =>
                {
                    b.Navigation("ProvidersDeposit");

                    b.Navigation("UsersDeposit");
                });

            modelBuilder.Entity("NaqdiDAL.Models.CasesCPS", b =>
                {
                    b.Navigation("CasesCPSField_Provs");

                    b.Navigation("Stores");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Company", b =>
                {
                    b.Navigation("CasesCPS");

                    b.Navigation("Excute");

                    b.Navigation("Log");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Complaint", b =>
                {
                    b.Navigation("Reply");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Provider", b =>
                {
                    b.Navigation("CasesCPS");

                    b.Navigation("Excute");

                    b.Navigation("Log");

                    b.Navigation("ProvidersDeposit");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Role", b =>
                {
                    b.Navigation("Rol_PrivFT");

                    b.Navigation("TUser");
                });

            modelBuilder.Entity("NaqdiDAL.Models.Service", b =>
                {
                    b.Navigation("CasesCPS");

                    b.Navigation("Excute");

                    b.Navigation("Log");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("NaqdiDAL.Models.TUser", b =>
                {
                    b.Navigation("Complaint");

                    b.Navigation("Excute");

                    b.Navigation("Excute1");

                    b.Navigation("Log");

                    b.Navigation("ProvidersDeposit");

                    b.Navigation("Reply");

                    b.Navigation("Rol_PrivFT");

                    b.Navigation("UsersDeposit");

                    b.Navigation("UsersDeposit1");

                    b.Navigation("UsersDeposit2");
                });

            modelBuilder.Entity("NaqdiDAL.Models.cases", b =>
                {
                    b.Navigation("CasesCPS");
                });

            modelBuilder.Entity("NaqdiDAL.Models.privilage", b =>
                {
                    b.Navigation("Rol_PrivFT");
                });
#pragma warning restore 612, 618
        }
    }
}
